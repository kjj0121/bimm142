---
title: "Class11"
author: "Jae Kim"
format: pdf
editor: visual
---
# Importing Candy Data

Get the data from the FiveThirtyEight GitHub repo

```{r}
candy <- read.csv("candy-data.csv", row.names = 1)
head(candy)

```
> Q1. How many different candy types are in this dataset?

```{r}
nrow(candy)
```


> Q2. How many fruity candy types are in the dataset?

```{r}
sum(candy$fruity)
```

> Q. What are these fruity candy?

We can use the ==
```{r}
rownames(candy[candy$fruity == 1, ])
```

## How often does my favorite candy win

```{r}
candy["Twix",]$winpercent
```


> Q3. What is your favorite candy in the dataset and what is it’s winpercent value?

```{r}
candy["Snickers",]$winpercent
```


> Q4. What is the winpercent value for “Kit Kat”?

```{r}
candy["Kit Kat",]$winpercent
```


> Q5. What is the winpercent value for “Tootsie Roll Snack Bars”?

```{r}
candy["Tootsie Roll Snack Bars",]$winpercent
```

```{r}
library("skimr")
skimr::skim(candy)
```

> Q6. Is there any variable/column that looks to be on a different scale to the majority of the other columns in the dataset?

Yes, the `winperceent` column is on a 0:100 scale and all others appear to be 0:1 scale.

> Q7. What do you think a zero and one represent for the candy$chocolate column?

0 means that the candy does not contain chocolate
1 means that the candy does contain chocolate

> Q8. Plot a histogram of winpercent values

```{r}
library(ggplot2)

ggplot(candy, aes(winpercent)) + geom_histogram(binwidth=10)
```

> Q9. Is the distribution of winpercent values symmetrical?

No

> Q10. Is the center of the distribution above or below 50%?

Below 50% with a mean:

```{r}
mean(candy$winpercent)
```


> Q11. On average is chocolate candy higher or lower ranked than fruit candy?

To answer this question I will need to "subset" the candy dataset to just chocolate candy and then calculate the mean of these. Then do the same for fruity candy and compare.

avg win% of chocolate candy:
```{r}
#Subset to just chocolate rows
choco <- candy[as.logical(candy$chocolate),]

# Get their winpercent values
choco.win <- choco$winpercent

# Calculate their mean winpercent value
mean(choco.win)

```

avg win% of fruit candy:
```{r}
fruit <- candy[as.logical(candy$fruity),]

fruit.win <- fruit$winpercent

mean(fruit.win)
```

On average, chocolate candy is higher ranked than fruit candy.


> Q12. Is this difference statistically significant?

```{r}
t.test(choco.win, fruit.win)
```

## Overall Candy Ranking

There is a base R function called `sort()` for sorting vectors of input

```{r}
x <- c(5,2,10)

#sort(x, decreasing = TRUE)
sort(x, decreasing = TRUE)
```

The buddy function to `sort()` that is often more useful is called `order()`. It returns the "indices" of the input that would result in it being spread.

```{r}
order(x)
x[order(x)]
```

> Q13. What are the five least liked candy types in this set?

I can order by `winpercent`

```{r}
ord <- order(candy$winpercent)
candy[ord,]
head(candy[ord,], 5)
```


> Q14. What are the top 5 all time favorite candy types out of this set?

```{r}
ord <- order(candy$winpercent, decreasing=TRUE)
head(candy[ord,], n=5)
```

>Q15. Make a first barplot of candy ranking based on winpercent values.

```{r}
ggplot(candy) + 
  aes(winpercent, rownames(candy)) +
  geom_col()
```

> Q16. This is quite ugly, use the reorder() function to get the bars sorted by winpercent?

```{r}
ggplot(candy) + 
  aes(winpercent, reorder(rownames(candy), winpercent)) +
  geom_col()
```

```{r}
my_cols=rep("black", nrow(candy))
my_cols[as.logical(candy$chocolate)] = "chocolate"
my_cols[as.logical(candy$bar)] = "brown"
my_cols[as.logical(candy$fruity)] = "pink"

ggplot(candy) + 
  aes(winpercent, reorder(rownames(candy), winpercent)) +
  geom_col(fill=my_cols)

```

> Q17. What is the worst ranked chocolate candy?

Sixlets

> Q18. What is the best ranked fruity candy?

Starburst

## Taking a look at pricepercent

> Q19. Which candy type is the highest ranked in terms of winpercent for the least money - i.e. offers the most bang for your buck?

```{r}
my_cols[as.logical(candy$fruity)] = "red"
ggplot(candy, aes(winpercent, pricepercent)) + geom_point(col=my_cols)
```


Add some labels

```{r}
ggplot(candy, aes(winpercent, pricepercent, label=rownames(candy))) + geom_point(col=my_cols) + geom_text()
```

To deal with overlapping labels I can use the **ggrepel** package

```{r}
library(ggrepel)

ggplot(candy) +
  aes(winpercent, pricepercent, label=rownames(candy)) +
  geom_point(col=my_cols) + 
  geom_text_repel(max.overlaps = 10, col=my_cols)
```

REESE'S MINIATURES

> Q20. What are the top 5 most expensive candy types in the dataset and of these which is the least popular?

```{r}
ord <- order(candy$pricepercent, decreasing = TRUE)
head( candy[ord,c(11,12)], n=5 )
```

## Exploring the correlation structure

Pearson correlation goes between -1 and +1 with 0 indicating no correlation, and values close to one being very highly correlated.

```{r}
library(corrplot)

cij <-  cor(candy)

corrplot(cij)
```

> Q22. Examining this plot what two variables are anti-correlated (i.e. have minus values)?

Fruity and Chocolate

Bar and Pluribus

> Q23. Similarly, what two variables are most positively correlated?

Chocoloate and Winpercent

# Principal Component Analysis

The base R function for PCA is called `prcomp()` and we can set "scale=TRUE/FALSE"

```{r}
pca <- prcomp(candy, scale = TRUE)
summary(pca)
```


The main result of PCA - i.e. the new PC plot (projection of candy on our new PC axis) is contained in `pca$x`

```{r}
pc <- as.data.frame(pca$x)

ggplot(pc) +
  aes(PC1, PC2, label = rownames(pc)) +
  geom_point(col=my_cols) +
  geom_text_repel(max.overlaps = 5)
```

> Q24. What original variables are picked up strongly by PC1 in the positive direction? Do these make sense to you?

```{r}
par(mar=c(8,4,2,2))
barplot(pca$rotation[,1], las=2, ylab="PC1 Contribution")
```

Fruity; Yes



